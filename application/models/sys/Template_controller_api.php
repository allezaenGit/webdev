<?php
class Template_controller_api extends CI_Model {


function __construct(){
      parent::__construct();
	  
}




function create_controller($fc,$fm,$fl,$ff,$pca,$gf,
					  $field_alias_form,$field_alias_field,$type_input_field,
					  $field_double,$field_empty,
					  $crud_show,$server_side){

$private_where="";
$private_insert="";
$private_id=""; 
$separator="";

if($crud_show=='off'){
	$private_id 	= "\$this->_user_id";
	$separator =  ",";
}	
					  

$string = "<?php
include_once  BASEPATH . \"libraries/ybs/api/HeaderFilter.php\";
if (!defined('BASEPATH'))
    exit('No direct script access allowed');
use chriskacerguis\RestServer\RestController;
use ybs\general\Load;
use ybs\general\Validation;
use ybs\general\Storage;

use ybs\http\Request;
use ybs\http\Response;

use ybs\api\HeaderFilter;


//untuk menggunakan model Eloquent laravel aktifkan code di bawah ini//
//use model\\".$gf."\\" .$fm . ";


class $fc extends RestController {
	
	public \$tmodel;
    public function __construct(){
        parent::__construct();
		 
		 HeaderFilter::check();
		 
		 //use this for load all model in folder
		 Load::model(\"$gf\");
		 
		 \$this->tmodel =  new $fm();
		 
		 IDCoder::run(\$this);
    }

";

//----->function index <-------//  
$string .="
/**
*@param s start search at row (default 0) 
*@param l limit search (default 10)
*@param f key search
*@param field field_searching,<br><br>Use one or more this value : ";

$field="";
foreach($field_alias_field as $key=>$val){
$field .="$val|";	
}

$field = rtrim($field, "| ") ;
$string .= $field;
$string .="
*/	
public function index_get(){
	\$filter = [
		\"start\"  => \$this->get('s'),
		\"length\" => \$this->get('l'),
		\"find\"   => \$this->get('f'),
		\"field\"  => \$this->get('field'),
	];
	
	\$result=  \$this->tmodel->json(\$filter);
	\$this->response( \$result, 200 );
}

";	
//----->END index <-------//  	


$string .= "
/**
";

foreach($field_alias_field as $key=>$val){
$string .= "*@param $val
";	
}

$string .="
*/
public function index_post(){
	\$val 	= request();
	
	\$valid = Validation::run(\$val,$fm::class);
	
	if(!\$valid){
			\$e = Validation::error();
			
			 \$this->response( [
                    'status' => false,
                    'message' => \$e->element . \", \" .  \$e->message
				], 202 );
	}
	
	//filter request by field db
	\$val = fillable(\$val,$fm::fillable);
	
	//remove id before insert
	unset(\$val['id']);
	\$success = \$this->tmodel->insert(\$val);
	\$this->response( [
                    'status' => true,
                    'message' => \"data berhasil di simpan\",
		], 200 );
	
	
}	
";





$string .= "
/**
";

foreach($field_alias_field as $key=>$val){
$string .= "*@param $val
";	
}

$string .="
*/
public function index_put(){
	\$val 	= request();
	
	\$valid = Validation::run(\$val,$fm::class);
	
	if(!\$valid){
			\$e = Validation::error();
			
			 \$this->response( [
                    'status' => false,
                    'message' => \$e->element . \", \" .  \$e->message
				], 202 );
	}
	
	//filter request by field db
	\$val = fillable(\$val,$fm::fillable);
	
	\$success = \$this->tmodel->update(\$val['id'],\$val);
	\$this->response( [
                    'status' => true,
                    'message' => \"data berhasil di simpan\",
		], 200 );
	
}	
";






$string .="
/**
*@param id
*/
public function index_delete(){
	\$val = request();
	\$data = explode(',',\$val['id']);
	
	
	\$success = \$this->tmodel->delete_multiple(\$data);
	
	if(\$success){
		\$this->response( [
						'status' => true,
						'message' => \"data berhasil di hapus\",
			], 200 );
	}else{
		\$this->response( [
						'status' => false,
						'message' => \"gagal menghapus data !\",
			], 202 );
	}
	
}	
";

	
//end class		
$string .= "


};

/* END */
/* Mohon untuk tidak mengubah informasi ini : */
/* Generated by YBS CRUD Generator ".date('Y-m-d H:i:s')." */
/* contact : YAP BRIDGING SYSTEM 		*/
/*			 bridging.system@gmail.com  */
/* 			 MAKASSAR CITY, INDONESIAN 	*/

"	;	
	
	
	

					  
$result = _createFile($string,$pca,$fc .'.php');		
return $result;			
	
}





}
